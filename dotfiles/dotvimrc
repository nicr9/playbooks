" Setup Vundle
set nocompatible
filetype off
set rtp^=~/.vim/bundle/Vundle.vim

" Vim plugins
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'fatih/vim-go'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-eunuch'
Plugin 'scrooloose/nerdtree'
Plugin 'ervandew/supertab'
Plugin 'bling/vim-airline'
Plugin 'file:///home/nic/src/github.com/nicr9/vim-orca'
call vundle#end()

set rtp+=~/.fzf

" Syntax HL and indentation
syntax on
filetype plugin indent on
set et bs=2 ts=4 sts=4 sw=4
set bg=dark

" Configure CtrlP
set runtimepath^=~/.vim/bundle/ctrlp

" Configure NERDTree
let NERDTreeIgnore = ['\.pyc$']
nmap <F7> :NERDTreeToggle<CR>

" Configure vim-airline
let g:airline_powerline_fonts = 1
set laststatus=2

" Text colours and encoding
set t_Co=256
set encoding=utf-8

" Extra settings
set wildmenu
set number
set hlsearch
set incsearch
set colorcolumn=80

" Keymappings
nmap <F6> :!xclip -sel clip < %<CR>
vmap <F6> "+y
nmap <F5> :set paste!<CR>
nmap <F4> :set nu!<CR>
nmap <F3> :!pygt <C-R><C-W> <CR>
vmap <F3> "py:<C-W>!pygt <C-R>p <CR>
nmap <F2> mm:%s/<C-R><C-W>//gc<LEFT><LEFT><LEFT>
nmap <F1> :w !pandoc -c ~/css/github-pandoc.css -f markdown_github -o %:r.html<CR>:!google-chrome %:r.html<CR>

" Centre view on next/previus search result
nmap n nzz
nmap N Nzz

" quick key to disable highlight of previous search results
nmap <leader>n :noh<CR>

" Move between splits with CTRL+[hjkl]
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Autocmds
if has("autocmd")
    " Plugins
    autocmd BufReadPost fugitive://* set bufhidden=delete

    " Filetypes
    autocmd BufRead *.log set filetype=md

    " Indentation rules
    autocmd FileType yaml,yml setlocal tabstop=2 expandtab shiftwidth=2 softtabstop=2

    " Python specific keymappings
    autocmd BufRead *.py :nmap <buffer> <leader>c :!sudo python2.7 setup.py develop<CR>
    autocmd BufRead *.py :nmap <buffer> <leader>r :!python2.7 %<CR>
    autocmd BufRead *.py :nmap <buffer> <leader>R :!python2.7 % 
    autocmd BufRead *.py :nmap <buffer> <leader>t :!python2.7 -m unittest discover<CR>

    " Golang specific keymappings
    autocmd BufRead *.go :nmap <buffer> <leader>r :!go run %<CR>
    autocmd BufRead *.go :nmap <buffer> <leader>t :!go test<CR>
    autocmd BufRead *.go :nmap <buffer> <leader>T :!go test 

    " Ansible specific keymappings
    autocmd FileType yaml,yml :nmap <buffer> K :!ansible-doc <C-r><C-w><CR>

    " Markdown specific keymappings
    autocmd FileType markdown :vmap <buffer> <leader>- :s/_/\\_/g<CR>
    autocmd BufEnter,InsertLeave *.md :syntax sync fromstart
endif

" Custom fugitive commands
command! Gadd exec "Git add -p"
command! -nargs=* Ggraph exec "Git graph " . <q-args>
command! -nargs=? Gpush exec join(["Git push", len(<q-args>)==0?"origin":<q-args>, system("git rev-parse --abbrev-ref HEAD")], " ")[0:-2]
command! Gdiscard exec "Git checkout -p"
command! Gamend exec "Gcommit --amend"
command! Gpatch exec "Git diff --no-prefix"

" highlights
highlight Pmenu ctermbg=blue
highlight PmenuSel ctermbg=darkblue
highlight Search ctermbg=blue

" Work log mappings
vmap <leader>t :s/^\( [↳]\)\\|[*☑∅]/☐/<CR>:noh<CR>:w<CR> " ☐ : <C-R>u2610
nmap <leader>t :.s/^\( [↳]\)\\|[*☑∅]/☐/<CR>:noh<CR>:w<CR>
vmap <leader>d :s/^\( [↳]\)\\|[*☐∅]/☑/<CR>:noh<CR>:w<CR> " ☑ : <C-R>u2611
nmap <leader>d :.s/^\( [↳]\)\\|[*☐∅]/☑/<CR>:noh<CR>:w<CR>
vmap <leader>s :s/^\( [↳]\)\\|[☑☐∅]/*/<CR>:noh<CR>:w<CR> " * : <S-8>
nmap <leader>s :.s/^\( [↳]\)\\|[☑☐∅]/*/<CR>:noh<CR>:w<CR>
vmap <leader>n :s/^\( [↳]\)\\|[☑☐*]/∅/<CR>:noh<CR>:w<CR> " ∅ : <C-R>u2205
nmap <leader>n :.s/^\( [↳]\)\\|[☑☐*]/∅/<CR>:noh<CR>:w<CR>
vmap <leader>r :s/^[☑☐*∅]/ ↳/<CR>:noh<CR>:w<CR> " ↳ : <C-R>u21b3
nmap <leader>r :.s/^[☑☐*∅]/ ↳/<CR>:noh<CR>:w<CR>

nmap <leader><space> :.s/^/\r# \r\r## Goals\r/<CR>:noh<CR>kkk$"=strftime("%d/%m/%y")<CR>p

vmap <leader>. :s/$/./<CR>:noh<CR>:w<CR>
nmap <leader>. :.s/$/./<CR>:noh<CR>:w<CR>
